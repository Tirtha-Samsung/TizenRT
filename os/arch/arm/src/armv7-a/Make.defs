############################################################################
# arch/arm/src/armv7-a/Make.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

# Common ARM files


# The vector table is the "head" object, i.e., the one that must forced into
# the link in order to draw in all of the other components

HEAD_ASRC += up_vectortab.S

ifeq ($(CONFIG_BUILD_KERNEL),y)
crt0$(OBJEXT): crt0.c
	$(CC) $(CFLAGS) -c armv7-a$(DELIM)crt0.c -o crt0$(OBJEXT)

STARTUP_OBJS = crt0$(OBJEXT)
endif

# Common assembly language files

CMN_ASRCS += up_cpuhead.S up_vectoraddrexcptn.S up_vectors.S

# Common C source files

CMN_CSRCS += up_cache.c up_dataabort.c
CMN_CSRCS += up_doirq.c up_gicv2.c up_gicv2_dump.c
CMN_CSRCS += up_initialstate.c up_mmu.c up_prefetchabort.c
CMN_CSRCS += up_schedulesigaction.c up_sigdeliver.c
CMN_CSRCS += up_syscall.c up_tcbinfo.c up_undefinedinsn.c
CMN_CSRCS += up_perf.c cp15_cacheops.c

ifeq ($(CONFIG_ARMV7A_HAVE_PTM), y)
  CMN_CSRCS += up_timer.c
endif

ifeq ($(CONFIG_ARMV7A_L2CC_PL310),y)
  CMN_CSRCS += up_l2cc_pl310.c
endif

ifeq ($(CONFIG_PAGING),y)
  CMN_CSRCS += up_allocpage.c up_checkmapping.c up_pginitialize.c
  CMN_CSRCS += up_va2pte.c
  CMN_ASRCS += up_pghead.S
else
  CMN_ASRCS += up_head.S
endif

ifeq ($(CONFIG_ARCH_ADDRENV),y)
  CMN_CSRCS += up_addrenv.c up_addrenv_utils.c up_addrenv_perms.c up_pgalloc.c
  ifeq ($(CONFIG_ARCH_STACK_DYNAMIC),y)
    CMN_CSRCS += up_addrenv_ustack.c
  endif
  ifeq ($(CONFIG_ARCH_KERNEL_STACK),y)
    CMN_CSRCS += up_addrenv_kstack.c
  endif
  ifeq ($(CONFIG_ARCH_VMA_MAPPING),y)
    CMN_CSRCS += up_addrenv_shm.c
  endif
endif

ifeq ($(CONFIG_MM_PGALLOC),y)
  CMN_CSRCS += up_physpgaddr.c
  ifeq ($(CONFIG_ARCH_PGPOOL_MAPPING),y)
    CMN_CSRCS += up_virtpgaddr.c
  endif
endif

ifeq ($(CONFIG_ARCH_FPU),y)
  CMN_CSRCS += up_fpucmp.c
  CMN_ASRCS += up_fpuconfig.S
endif

ifeq ($(CONFIG_SMP),y)
  CMN_CSRCS += up_cpuindex.c up_cpustart.c up_cpupause.c up_cpuidlestack.c
  CMN_CSRCS += up_scu.c
endif

